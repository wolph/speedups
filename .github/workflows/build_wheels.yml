name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build_quick:
    name: Fast wheel build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'develop')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 5


      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp312-manylinux_x86_64

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-quick
          path: ./wheelhouse/*.whl

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    timeout-minutes: 15
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 5

      - uses: actions/setup-python@v5
        with:
          cache: 'pip'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_MACOS: native
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_SKIP: 'pp* cp36-* cp37-* *-musllinux_*'

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz

  upload_all:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist
          merge-multiple: true

      - run: ls -Ralh dist

      - uses: pypa/gh-action-pypi-publish@v1.8.11
